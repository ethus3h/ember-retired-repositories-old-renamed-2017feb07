#! /usr/bin/env python

## Copyright (C) 2002, 2004 Red Hat, Inc.
## Copyright (C) 2002, 2004 Than Ngo <than@redhat.com>

## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 2 of the License, or
## (at your option) any later version.

## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.

## You should have received a copy of the GNU General Public License
## along with this program; if not, write to the Free Software
## Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

PROGNAME = '@NAME@'
TITLE = PROGNAME
SWITCHMAILDIR = '/usr/share/' + PROGNAME + '/'
COPYRIGHT = 'Copyright (C) 2002, 2003, 2004 Red Hat, Inc.'
AUTORS = ['Than Ngo <than@redhat.com>']
VERSION = '@VERSION@'
GLADEPATH = ''
TRUE = (1==1)
FALSE = not TRUE

import re
import traceback
import sys
import os
import os.path
import shutil
import string
import gettext

##
## I18N
##
gettext.bindtextdomain(PROGNAME, '/usr/share/locale')
gettext.textdomain(PROGNAME)
_ = gettext.gettext

TEXT = _('The Desktop Switcher is a tool which enables users to easily switch between various Desktops that they have installed.\n\nPlease select the default desktop for the system.')

INFO_TEXT = _('Your desktop configuration has successfully been updated,\n'
              'but you must restart the X Window System for the changes\n'
              'to take effect.\n')

WARNING_TEXT = _('Your desktop configuration cannot be updated, please make sure that the package switchdesk has correctly been installed on the machine.\n')

TIP_TEXT = _('You may not want your new settings to apply\n'
             'globally, but only to this current computer.\n'
             '(Your home directory may be NFS mounted, or\n'
             'you might be sitting at a slow computer, etc.)')

HELPER = 'switchdesk-helper'

WM_NAME=0
WIDGET_NAME=1
OPTION_NAME=2
ICON_NAME=3

GNOME = 'GNOME'
KDE = 'KDE'
XFCE = 'XFce'
TWM = 'TWM'
WINDOWMAKER = 'WindowMaker'
ENLIGHTENMENT = 'Enlightenment'
FVWM = 'FVWM'
ICEWM = 'IceWM'
FLUXBOX = 'FluxBox'
SYSTEM = 'System defaults'

WINDOWMANAGERS={ KDE           : [ 'startkde', 'kdeRB', 'kde', 'kde.png' ],
                 GNOME         : [ 'gnome-session', 'gnomeRB', 'gnome', 'gnome.png' ],
                 XFCE          : [ 'startxfce4', 'xfceRB' , 'xfce', 'xfce.png' ],
                 ICEWM         : [ 'icewm', 'icewmRB', 'icewm', 'icewm.png' ],
                 FVWM          : [ 'fvwm2', 'fvwmRB', 'fvwm', 'fvwm.png' ],
                 ENLIGHTENMENT : [ 'enlightenment', 'enlightenmentRB', 'enlightenment', 'elogo.png' ],
                 WINDOWMAKER   : [ 'wmaker', 'windowmakerRB', 'wmaker', 'windowmaker.png' ],
                 TWM           : [ 'twm', 'twmRB', 'twm', 'twm.png' ],
                 FLUXBOX       : [ 'fluxbox', 'fluxboxRB', 'fluxbox', 'fluxbox.png' ],
                 SYSTEM        : [ '', 'defaultRB', 'system', '' ] }

def getValue( s ):
    if string.find( s, '=' ) < 0:
        return ''
    s = string.split( s, '=', 1 )[1]
    s = string.replace( s, '\"', '')

    return string.strip(s)

def getWmFromFile( fn, k ):
    wm = ''
    if not os.access( fn, os.R_OK ):
       return wm
    f = open( fn, 'r' )
    line = f.readline()
    while line:
        if string.find( line, k ) == 0:
           wm = getValue(line)
           break
        line = f.readline()
    f.close()

    return wm

def getSystemDefault():
    return getWmFromFile( '/etc/sysconfig/desktop', 'DESKTOP=' )

def updateList():
    w = getSystemDefault()
    if w in WINDOWMANAGERS.keys():
       WINDOWMANAGERS[SYSTEM][ICON_NAME] = WINDOWMANAGERS[w][ICON_NAME]

def checkWM( wm ):
    DESKTOP_PATH = [ '/usr/bin/', '/usr/X11R6/bin/', '/usr/local/bin/' ]

    for p in DESKTOP_PATH:
        if os.access( p + WINDOWMANAGERS[wm][WM_NAME], os.X_OK ):
            return TRUE

    return FALSE

def getWmList():
    wmlist = []
    for w in WINDOWMANAGERS.keys():
        if checkWM( w ):
           wmlist.append( w )
    return wmlist

def getCurrentWM():
    wm = getWmFromFile( os.environ['HOME'] + '/.Xclients-default', 'WM=' )
    if wm == '':
       return wm

    for w in WINDOWMANAGERS:
        if wm in WINDOWMANAGERS[w]:
           wm = w
           break

    return wm

WMLIST = getWmList()
CW = getCurrentWM()
updateList()

def getDefaultWm():
    w = WMLIST[0]
    if KDE in WMLIST:
       w = KDE

    return w

def switchWM( wm ):
    pass
