# Makefile.in generated by automake 1.11.1 from Makefile.am.
# libgnomekbd/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.






pkgdatadir = $(datadir)/libgnomekbd
pkgincludedir = $(includedir)/libgnomekbd
pkglibdir = $(libdir)/libgnomekbd
pkglibexecdir = $(libexecdir)/libgnomekbd
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
subdir = libgnomekbd
DIST_COMMON = $(gnomekbdinc_HEADERS) $(noinst_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/intltool.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(schemadir)" \
	"$(DESTDIR)$(gnomekbdincdir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
libgnomekbd_la_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_libgnomekbd_la_OBJECTS = libgnomekbd_la-gkbd-desktop-config.lo \
	libgnomekbd_la-gkbd-keyboard-config.lo \
	libgnomekbd_la-gkbd-util.lo
libgnomekbd_la_OBJECTS = $(am_libgnomekbd_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
libgnomekbd_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libgnomekbd_la_CFLAGS) $(CFLAGS) $(libgnomekbd_la_LDFLAGS) \
	$(LDFLAGS) -o $@
libgnomekbdui_la_DEPENDENCIES = libgnomekbd.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_1)
am_libgnomekbdui_la_OBJECTS =  \
	libgnomekbdui_la-gkbd-indicator-config.lo \
	libgnomekbdui_la-gkbd-indicator.lo \
	libgnomekbdui_la-gkbd-status.lo \
	libgnomekbdui_la-gkbd-indicator-marshal.lo \
	libgnomekbdui_la-gkbd-indicator-plugin-manager.lo \
	libgnomekbdui_la-gkbd-keyboard-drawing-marshal.lo \
	libgnomekbdui_la-gkbd-keyboard-drawing.lo
libgnomekbdui_la_OBJECTS = $(am_libgnomekbdui_la_OBJECTS)
libgnomekbdui_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libgnomekbdui_la_CFLAGS) $(CFLAGS) \
	$(libgnomekbdui_la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(libgnomekbd_la_SOURCES) $(libgnomekbdui_la_SOURCES)
DIST_SOURCES = $(libgnomekbd_la_SOURCES) $(libgnomekbdui_la_SOURCES)
DATA = $(schema_DATA)
HEADERS = $(gnomekbdinc_HEADERS) $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /media/MyBook/libgnomekbd-2.30.2/missing --run aclocal-1.11
ACLOCAL_AMFLAGS = ${ACLOCAL_FLAGS}
ALL_LINGUAS = 
AMTAR = ${SHELL} /media/MyBook/libgnomekbd-2.30.2/missing --run tar
AM_DEFAULT_VERBOSITY = 0
AR = ar
AUTOCONF = ${SHELL} /media/MyBook/libgnomekbd-2.30.2/missing --run autoconf
AUTOHEADER = ${SHELL} /media/MyBook/libgnomekbd-2.30.2/missing --run autoheader
AUTOMAKE = ${SHELL} /media/MyBook/libgnomekbd-2.30.2/missing --run automake-1.11
AWK = gawk
CATALOGS = 
CATOBJEXT = .gmo
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DATADIRNAME = share
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GCONFTOOL = /usr/bin/gconftool-2
GCONF_CFLAGS = -pthread -DORBIT2=1 -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/include/gconf/2 -I/usr/include/orbit-2.0  
GCONF_LIBS = -L/usr/local/lib -lgconf-2 -lglib-2.0  
GCONF_REQUIRED = 2.14.0
GCONF_SCHEMA_CONFIG_SOURCE = xml:merged:/etc/gconf/gconf.xml.defaults
GCONF_SCHEMA_FILE_DIR = $(sysconfdir)/gconf/schemas
GDK_CFLAGS = -pthread -I/usr/local/include/gio-unix-2.0/ -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12  
GDK_LIBS = -pthread -L/usr/local/lib -lgdk-x11-2.0 -lpangocairo-1.0 -lgdk_pixbuf-2.0 -lm -lpango-1.0 -lcairo -lgobject-2.0 -lgmodule-2.0 -lpng12 -lgthread-2.0 -lrt -lglib-2.0  
GDK_REQUIRED = 2.18
GETTEXT_PACKAGE = libgnomekbd
GLIB_CFLAGS = -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include  
GLIB_LIBS = -L/usr/local/lib -lglib-2.0  
GMOFILES = 
GMSGFMT = /usr/bin/msgfmt
GREP = /bin/grep
GTK_CFLAGS = -pthread -I/usr/local/include/gio-unix-2.0/ -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/pango-1.0 -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12  
GTK_LIBS = -pthread -L/usr/local/lib -lgtk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lfreetype -lfontconfig -lgdk-x11-2.0 -lpangocairo-1.0 -lgdk_pixbuf-2.0 -lm -lpango-1.0 -lcairo -lgobject-2.0 -lgmodule-2.0 -lpng12 -lgthread-2.0 -lrt -lglib-2.0  
GTK_REQUIRED = 2.18
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INSTOBJEXT = .mo
INTLLIBS = 
INTLTOOL_EXTRACT = /usr/bin/intltool-extract
INTLTOOL_MERGE = /usr/bin/intltool-merge
INTLTOOL_PERL = /usr/bin/perl
INTLTOOL_UPDATE = /usr/bin/intltool-update
LD = /usr/bin/ld
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBXKLAVIER_CFLAGS = -pthread -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/include/libxml2  
LIBXKLAVIER_LIBS = -pthread -L/usr/local/lib -lxklavier -lgobject-2.0 -lgthread-2.0 -lrt -lglib-2.0 -lxml2  
LIBXKLAVIER_REQUIRED = 5.0
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /media/MyBook/libgnomekbd-2.30.2/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
MKINSTALLDIRS = ./mkinstalldirs
MSGFMT = /usr/bin/msgfmt
MSGFMT_OPTS = -c
MSGMERGE = /usr/bin/msgmerge
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = libgnomekbd
PACKAGE_BUGREPORT = http://bugzilla.gnome.org/enter_bug.cgi?product=libgnomekbd
PACKAGE_NAME = libgnomekbd
PACKAGE_STRING = libgnomekbd 2.30.2
PACKAGE_TARNAME = libgnomekbd
PACKAGE_URL = 
PACKAGE_VERSION = 2.30.2
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
POFILES = 
POSUB = po
PO_IN_DATADIR_FALSE = 
PO_IN_DATADIR_TRUE = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
USE_NLS = yes
VERSION = 2.30.2
VERSION_INFO = 5:0:1
WARN_CFLAGS = -Wall -Wmissing-prototypes 
XGETTEXT = /usr/bin/xgettext
XLIB_CFLAGS = 
XLIB_LIBS =  -lX11 
XMKMF = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS =  -lSM -lICE
abs_builddir = /media/MyBook/libgnomekbd-2.30.2/libgnomekbd
abs_srcdir = /media/MyBook/libgnomekbd-2.30.2/libgnomekbd
abs_top_builddir = /media/MyBook/libgnomekbd-2.30.2
abs_top_srcdir = /media/MyBook/libgnomekbd-2.30.2
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /media/MyBook/libgnomekbd-2.30.2/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
lib_LTLIBRARIES = libgnomekbd.la libgnomekbdui.la
common_CFLAGS = \
	-I$(top_srcdir) -Wall 			\
	$(GDK_CFLAGS)					\
	$(GCONF_CFLAGS)					\
	$(LIBXKLAVIER_CFLAGS)				\
	$(XLIB_CFLAGS)					\
	-I$(top_srcdir)/intl				\
	-DSYS_PLUGIN_DIR=\"$(libdir)/gnomekbd/\"	\
	-DG_LOG_DOMAIN=\"GnomeKbdIndicator\"		\
	-DDATADIR=\"$(datadir)\"			\
	-DSYSCONFDIR=\"$(sysconfdir)\"			\
	-DLIBDIR=\"$(libdir)\"				

libgnomekbd_la_CFLAGS = $(common_CFLAGS)
libgnomekbdui_la_CFLAGS = $(common_CFLAGS)		\
	$(GTK_CFLAGS)

common_LDFLAGS = -version-info 5:0:1 -no-undefined
common_LIBADD = \
		$(GDK_LIBS) \
		$(GCONF_LIBS) \
		$(LIBXKLAVIER_LIBS) \
		$(XLIB_LIBS)

libgnomekbd_la_LDFLAGS = $(common_LDFLAGS)
libgnomekbd_la_LIBADD = $(common_LIBADD)
libgnomekbdui_la_LDFLAGS = $(common_LDFLAGS)
libgnomekbdui_la_LIBADD = libgnomekbd.la \
                           $(common_LIBADD) \
                           $(GTK_LIBS)

libgnomekbd_la_SOURCES = \
                         gkbd-desktop-config.c \
                         gkbd-keyboard-config.c \
                         gkbd-util.c

libgnomekbdui_la_SOURCES = \
                         gkbd-indicator-config.c \
                         gkbd-indicator.c \
                         gkbd-status.c \
                         gkbd-indicator-marshal.c \
                         gkbd-indicator-plugin-manager.c \
                         gkbd-keyboard-drawing-marshal.c \
                         gkbd-keyboard-drawing.c

BUILT_SOURCES = gkbd-indicator-marshal.c \
	gkbd-indicator-marshal.h         \
        gkbd-keyboard-drawing-marshal.c            \
        gkbd-keyboard-drawing-marshal.h

CLEANFILES = $(BUILT_SOURCES) $(schema_DATA)
gnomekbdincdir = $(includedir)/libgnomekbd
gnomekbdinc_HEADERS = \
                      gkbd-desktop-config.h \
                      gkbd-keyboard-config.h \
                      gkbd-indicator.h \
                      gkbd-status.h \
                      gkbd-indicator-config.h \
                      gkbd-indicator-plugin.h \
                      gkbd-keyboard-drawing.h \
                      gkbd-util.h

noinst_HEADERS = gkbd-indicator-plugin-manager.h \
                 $(extra_nih) \
                 gkbd-config-private.h

EXTRA_DIST = gkbd-indicator-marshal.list \
             gkbd-keyboard-drawing-marshal.list \
             $(schema_in_files)

GLIB_GENMARSHAL = $(shell pkg-config --variable=glib_genmarshal glib-2.0)
schemadir = $(GCONF_SCHEMA_FILE_DIR)
schema_in_files = desktop_gnome_peripherals_keyboard_xkb.schemas.in
schema_DATA = $(schema_in_files:.schemas.in=.schemas)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu libgnomekbd/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu libgnomekbd/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libgnomekbd.la: $(libgnomekbd_la_OBJECTS) $(libgnomekbd_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libgnomekbd_la_LINK) -rpath $(libdir) $(libgnomekbd_la_OBJECTS) $(libgnomekbd_la_LIBADD) $(LIBS)
libgnomekbdui.la: $(libgnomekbdui_la_OBJECTS) $(libgnomekbdui_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libgnomekbdui_la_LINK) -rpath $(libdir) $(libgnomekbdui_la_OBJECTS) $(libgnomekbdui_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libgnomekbd_la-gkbd-desktop-config.Plo
include ./$(DEPDIR)/libgnomekbd_la-gkbd-keyboard-config.Plo
include ./$(DEPDIR)/libgnomekbd_la-gkbd-util.Plo
include ./$(DEPDIR)/libgnomekbdui_la-gkbd-indicator-config.Plo
include ./$(DEPDIR)/libgnomekbdui_la-gkbd-indicator-marshal.Plo
include ./$(DEPDIR)/libgnomekbdui_la-gkbd-indicator-plugin-manager.Plo
include ./$(DEPDIR)/libgnomekbdui_la-gkbd-indicator.Plo
include ./$(DEPDIR)/libgnomekbdui_la-gkbd-keyboard-drawing-marshal.Plo
include ./$(DEPDIR)/libgnomekbdui_la-gkbd-keyboard-drawing.Plo
include ./$(DEPDIR)/libgnomekbdui_la-gkbd-status.Plo

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

libgnomekbd_la-gkbd-desktop-config.lo: gkbd-desktop-config.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgnomekbd_la_CFLAGS) $(CFLAGS) -MT libgnomekbd_la-gkbd-desktop-config.lo -MD -MP -MF $(DEPDIR)/libgnomekbd_la-gkbd-desktop-config.Tpo -c -o libgnomekbd_la-gkbd-desktop-config.lo `test -f 'gkbd-desktop-config.c' || echo '$(srcdir)/'`gkbd-desktop-config.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgnomekbd_la-gkbd-desktop-config.Tpo $(DEPDIR)/libgnomekbd_la-gkbd-desktop-config.Plo
#	$(AM_V_CC) \
#	source='gkbd-desktop-config.c' object='libgnomekbd_la-gkbd-desktop-config.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgnomekbd_la_CFLAGS) $(CFLAGS) -c -o libgnomekbd_la-gkbd-desktop-config.lo `test -f 'gkbd-desktop-config.c' || echo '$(srcdir)/'`gkbd-desktop-config.c

libgnomekbd_la-gkbd-keyboard-config.lo: gkbd-keyboard-config.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgnomekbd_la_CFLAGS) $(CFLAGS) -MT libgnomekbd_la-gkbd-keyboard-config.lo -MD -MP -MF $(DEPDIR)/libgnomekbd_la-gkbd-keyboard-config.Tpo -c -o libgnomekbd_la-gkbd-keyboard-config.lo `test -f 'gkbd-keyboard-config.c' || echo '$(srcdir)/'`gkbd-keyboard-config.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgnomekbd_la-gkbd-keyboard-config.Tpo $(DEPDIR)/libgnomekbd_la-gkbd-keyboard-config.Plo
#	$(AM_V_CC) \
#	source='gkbd-keyboard-config.c' object='libgnomekbd_la-gkbd-keyboard-config.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgnomekbd_la_CFLAGS) $(CFLAGS) -c -o libgnomekbd_la-gkbd-keyboard-config.lo `test -f 'gkbd-keyboard-config.c' || echo '$(srcdir)/'`gkbd-keyboard-config.c

libgnomekbd_la-gkbd-util.lo: gkbd-util.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgnomekbd_la_CFLAGS) $(CFLAGS) -MT libgnomekbd_la-gkbd-util.lo -MD -MP -MF $(DEPDIR)/libgnomekbd_la-gkbd-util.Tpo -c -o libgnomekbd_la-gkbd-util.lo `test -f 'gkbd-util.c' || echo '$(srcdir)/'`gkbd-util.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgnomekbd_la-gkbd-util.Tpo $(DEPDIR)/libgnomekbd_la-gkbd-util.Plo
#	$(AM_V_CC) \
#	source='gkbd-util.c' object='libgnomekbd_la-gkbd-util.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgnomekbd_la_CFLAGS) $(CFLAGS) -c -o libgnomekbd_la-gkbd-util.lo `test -f 'gkbd-util.c' || echo '$(srcdir)/'`gkbd-util.c

libgnomekbdui_la-gkbd-indicator-config.lo: gkbd-indicator-config.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgnomekbdui_la_CFLAGS) $(CFLAGS) -MT libgnomekbdui_la-gkbd-indicator-config.lo -MD -MP -MF $(DEPDIR)/libgnomekbdui_la-gkbd-indicator-config.Tpo -c -o libgnomekbdui_la-gkbd-indicator-config.lo `test -f 'gkbd-indicator-config.c' || echo '$(srcdir)/'`gkbd-indicator-config.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgnomekbdui_la-gkbd-indicator-config.Tpo $(DEPDIR)/libgnomekbdui_la-gkbd-indicator-config.Plo
#	$(AM_V_CC) \
#	source='gkbd-indicator-config.c' object='libgnomekbdui_la-gkbd-indicator-config.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgnomekbdui_la_CFLAGS) $(CFLAGS) -c -o libgnomekbdui_la-gkbd-indicator-config.lo `test -f 'gkbd-indicator-config.c' || echo '$(srcdir)/'`gkbd-indicator-config.c

libgnomekbdui_la-gkbd-indicator.lo: gkbd-indicator.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgnomekbdui_la_CFLAGS) $(CFLAGS) -MT libgnomekbdui_la-gkbd-indicator.lo -MD -MP -MF $(DEPDIR)/libgnomekbdui_la-gkbd-indicator.Tpo -c -o libgnomekbdui_la-gkbd-indicator.lo `test -f 'gkbd-indicator.c' || echo '$(srcdir)/'`gkbd-indicator.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgnomekbdui_la-gkbd-indicator.Tpo $(DEPDIR)/libgnomekbdui_la-gkbd-indicator.Plo
#	$(AM_V_CC) \
#	source='gkbd-indicator.c' object='libgnomekbdui_la-gkbd-indicator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgnomekbdui_la_CFLAGS) $(CFLAGS) -c -o libgnomekbdui_la-gkbd-indicator.lo `test -f 'gkbd-indicator.c' || echo '$(srcdir)/'`gkbd-indicator.c

libgnomekbdui_la-gkbd-status.lo: gkbd-status.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgnomekbdui_la_CFLAGS) $(CFLAGS) -MT libgnomekbdui_la-gkbd-status.lo -MD -MP -MF $(DEPDIR)/libgnomekbdui_la-gkbd-status.Tpo -c -o libgnomekbdui_la-gkbd-status.lo `test -f 'gkbd-status.c' || echo '$(srcdir)/'`gkbd-status.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgnomekbdui_la-gkbd-status.Tpo $(DEPDIR)/libgnomekbdui_la-gkbd-status.Plo
#	$(AM_V_CC) \
#	source='gkbd-status.c' object='libgnomekbdui_la-gkbd-status.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgnomekbdui_la_CFLAGS) $(CFLAGS) -c -o libgnomekbdui_la-gkbd-status.lo `test -f 'gkbd-status.c' || echo '$(srcdir)/'`gkbd-status.c

libgnomekbdui_la-gkbd-indicator-marshal.lo: gkbd-indicator-marshal.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgnomekbdui_la_CFLAGS) $(CFLAGS) -MT libgnomekbdui_la-gkbd-indicator-marshal.lo -MD -MP -MF $(DEPDIR)/libgnomekbdui_la-gkbd-indicator-marshal.Tpo -c -o libgnomekbdui_la-gkbd-indicator-marshal.lo `test -f 'gkbd-indicator-marshal.c' || echo '$(srcdir)/'`gkbd-indicator-marshal.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgnomekbdui_la-gkbd-indicator-marshal.Tpo $(DEPDIR)/libgnomekbdui_la-gkbd-indicator-marshal.Plo
#	$(AM_V_CC) \
#	source='gkbd-indicator-marshal.c' object='libgnomekbdui_la-gkbd-indicator-marshal.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgnomekbdui_la_CFLAGS) $(CFLAGS) -c -o libgnomekbdui_la-gkbd-indicator-marshal.lo `test -f 'gkbd-indicator-marshal.c' || echo '$(srcdir)/'`gkbd-indicator-marshal.c

libgnomekbdui_la-gkbd-indicator-plugin-manager.lo: gkbd-indicator-plugin-manager.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgnomekbdui_la_CFLAGS) $(CFLAGS) -MT libgnomekbdui_la-gkbd-indicator-plugin-manager.lo -MD -MP -MF $(DEPDIR)/libgnomekbdui_la-gkbd-indicator-plugin-manager.Tpo -c -o libgnomekbdui_la-gkbd-indicator-plugin-manager.lo `test -f 'gkbd-indicator-plugin-manager.c' || echo '$(srcdir)/'`gkbd-indicator-plugin-manager.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgnomekbdui_la-gkbd-indicator-plugin-manager.Tpo $(DEPDIR)/libgnomekbdui_la-gkbd-indicator-plugin-manager.Plo
#	$(AM_V_CC) \
#	source='gkbd-indicator-plugin-manager.c' object='libgnomekbdui_la-gkbd-indicator-plugin-manager.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgnomekbdui_la_CFLAGS) $(CFLAGS) -c -o libgnomekbdui_la-gkbd-indicator-plugin-manager.lo `test -f 'gkbd-indicator-plugin-manager.c' || echo '$(srcdir)/'`gkbd-indicator-plugin-manager.c

libgnomekbdui_la-gkbd-keyboard-drawing-marshal.lo: gkbd-keyboard-drawing-marshal.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgnomekbdui_la_CFLAGS) $(CFLAGS) -MT libgnomekbdui_la-gkbd-keyboard-drawing-marshal.lo -MD -MP -MF $(DEPDIR)/libgnomekbdui_la-gkbd-keyboard-drawing-marshal.Tpo -c -o libgnomekbdui_la-gkbd-keyboard-drawing-marshal.lo `test -f 'gkbd-keyboard-drawing-marshal.c' || echo '$(srcdir)/'`gkbd-keyboard-drawing-marshal.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgnomekbdui_la-gkbd-keyboard-drawing-marshal.Tpo $(DEPDIR)/libgnomekbdui_la-gkbd-keyboard-drawing-marshal.Plo
#	$(AM_V_CC) \
#	source='gkbd-keyboard-drawing-marshal.c' object='libgnomekbdui_la-gkbd-keyboard-drawing-marshal.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgnomekbdui_la_CFLAGS) $(CFLAGS) -c -o libgnomekbdui_la-gkbd-keyboard-drawing-marshal.lo `test -f 'gkbd-keyboard-drawing-marshal.c' || echo '$(srcdir)/'`gkbd-keyboard-drawing-marshal.c

libgnomekbdui_la-gkbd-keyboard-drawing.lo: gkbd-keyboard-drawing.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgnomekbdui_la_CFLAGS) $(CFLAGS) -MT libgnomekbdui_la-gkbd-keyboard-drawing.lo -MD -MP -MF $(DEPDIR)/libgnomekbdui_la-gkbd-keyboard-drawing.Tpo -c -o libgnomekbdui_la-gkbd-keyboard-drawing.lo `test -f 'gkbd-keyboard-drawing.c' || echo '$(srcdir)/'`gkbd-keyboard-drawing.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgnomekbdui_la-gkbd-keyboard-drawing.Tpo $(DEPDIR)/libgnomekbdui_la-gkbd-keyboard-drawing.Plo
#	$(AM_V_CC) \
#	source='gkbd-keyboard-drawing.c' object='libgnomekbdui_la-gkbd-keyboard-drawing.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgnomekbdui_la_CFLAGS) $(CFLAGS) -c -o libgnomekbdui_la-gkbd-keyboard-drawing.lo `test -f 'gkbd-keyboard-drawing.c' || echo '$(srcdir)/'`gkbd-keyboard-drawing.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-schemaDATA: $(schema_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(schemadir)" || $(MKDIR_P) "$(DESTDIR)$(schemadir)"
	@list='$(schema_DATA)'; test -n "$(schemadir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(schemadir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(schemadir)" || exit $$?; \
	done

uninstall-schemaDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(schema_DATA)'; test -n "$(schemadir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(schemadir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(schemadir)" && rm -f $$files
install-gnomekbdincHEADERS: $(gnomekbdinc_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(gnomekbdincdir)" || $(MKDIR_P) "$(DESTDIR)$(gnomekbdincdir)"
	@list='$(gnomekbdinc_HEADERS)'; test -n "$(gnomekbdincdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(gnomekbdincdir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(gnomekbdincdir)" || exit $$?; \
	done

uninstall-gnomekbdincHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(gnomekbdinc_HEADERS)'; test -n "$(gnomekbdincdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(gnomekbdincdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(gnomekbdincdir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(DATA) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(schemadir)" "$(DESTDIR)$(gnomekbdincdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-data-local install-gnomekbdincHEADERS \
	install-schemaDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-gnomekbdincHEADERS uninstall-libLTLIBRARIES \
	uninstall-schemaDATA

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am \
	install-data-local install-dvi install-dvi-am install-exec \
	install-exec-am install-gnomekbdincHEADERS install-html \
	install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-schemaDATA install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-gnomekbdincHEADERS \
	uninstall-libLTLIBRARIES uninstall-schemaDATA


%.desktop:   %.desktop.in   $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@

%.schemas:   %.schemas.in   $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -s -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@

gkbd-indicator-marshal.h: gkbd-indicator-marshal.list
	$(AM_V_GEN)$(GLIB_GENMARSHAL) --prefix=gkbd_indicator $(srcdir)/gkbd-indicator-marshal.list --header > $@

gkbd-indicator-marshal.c: gkbd-indicator-marshal.h
	$(AM_V_GEN)$(GLIB_GENMARSHAL) --prefix=gkbd_indicator $(srcdir)/gkbd-indicator-marshal.list --body > $@

gkbd-keyboard-drawing-marshal.h: gkbd-keyboard-drawing-marshal.list
	$(AM_V_GEN)( $(GLIB_GENMARSHAL) --prefix=gkbd_keyboard_drawing $(srcdir)/gkbd-keyboard-drawing-marshal.list \
                            --header > gkbd-keyboard-drawing-marshal.tmp \
          && mv gkbd-keyboard-drawing-marshal.tmp gkbd-keyboard-drawing-marshal.h ) \
        || ( rm -f gkbd-keyboard-drawing-marshal.tmp && exit 1 )

gkbd-keyboard-drawing-marshal.c: gkbd-keyboard-drawing-marshal.h
	$(AM_V_GEN)( $(GLIB_GENMARSHAL) --prefix=gkbd_keyboard_drawing $(srcdir)/gkbd-keyboard-drawing-marshal.list \
                            --body > gkbd-keyboard-drawing-marshal.tmp \
          && mv gkbd-keyboard-drawing-marshal.tmp gkbd-keyboard-drawing-marshal.c ) \
        || ( rm -f gkbd-keyboard-drawing-marshal.tmp && exit 1 )

# don't do this if we are building in eg. rpm
install-data-local:
	if test -z "$(DESTDIR)" ; then \
		for p in $(schema_DATA) ; do \
			GCONF_CONFIG_SOURCE=$(GCONF_SCHEMA_CONFIG_SOURCE) $(GCONFTOOL) --makefile-install-rule $$p; \
		done \
	fi
#install-data-local:

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
